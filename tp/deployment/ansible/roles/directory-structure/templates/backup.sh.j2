#!/bin/bash
# ==============================================================================
# SCRIPT DE SAUVEGARDE - {{ app_name | upper }}
# G√©n√©r√© automatiquement par Ansible
# ==============================================================================

set -e

# Variables
BACKUP_DIR="{{ app_directory }}/backups"
DATE=$(date +%Y%m%d_%H%M%S)
APP_NAME="{{ app_name }}"
DOCKER_USER="{{ docker_user }}"

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

log_info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Cr√©ation des r√©pertoires de sauvegarde
mkdir -p "$BACKUP_DIR/daily"
mkdir -p "$BACKUP_DIR/weekly"
mkdir -p "$BACKUP_DIR/monthly"

log_info "üîÑ D√©but de la sauvegarde - $DATE"

# Sauvegarde MongoDB
if docker ps --format "table {{.Names}}" | grep -q mongodb; then
    log_info "üì¶ Sauvegarde MongoDB..."
    docker exec mongodb mongodump --out /tmp/backup_$DATE
    docker cp mongodb:/tmp/backup_$DATE "$BACKUP_DIR/daily/mongodb_$DATE"
    docker exec mongodb rm -rf /tmp/backup_$DATE
    log_info "‚úÖ Sauvegarde MongoDB termin√©e"
else
    log_warning "‚ö†Ô∏è  Container MongoDB non trouv√©"
fi

# Sauvegarde des configurations
log_info "‚öôÔ∏è  Sauvegarde des configurations..."
tar -czf "$BACKUP_DIR/daily/config_$DATE.tar.gz" -C "{{ app_directory }}" config/

# Sauvegarde des logs r√©cents
log_info "üìù Sauvegarde des logs..."
tar -czf "$BACKUP_DIR/daily/logs_$DATE.tar.gz" -C "/var/log" {{ app_name }}/

# Nettoyage des anciennes sauvegardes (garde 7 jours)
log_info "üßπ Nettoyage des anciennes sauvegardes..."
find "$BACKUP_DIR/daily" -type f -mtime +7 -delete

log_info "‚úÖ Sauvegarde termin√©e avec succ√®s !"

# Affichage de l'espace utilis√©
echo "üíæ Espace utilis√© par les sauvegardes:"
du -sh "$BACKUP_DIR"/*
